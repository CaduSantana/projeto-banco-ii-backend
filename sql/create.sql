-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS trabalho_bd.pessoas
(
    uuid_pessoa uuid NOT NULL,
    nome character varying(45) NOT NULL,
    sobrenome character varying(45) NOT NULL,
    cpf character(11) NOT NULL,
    email character varying(320) NOT NULL,
    senha character varying(40) NOT NULL,
    is_funcionario boolean NOT NULL,
    is_admin boolean NOT NULL,
    PRIMARY KEY (uuid_pessoa),
    UNIQUE (cpf),
    UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS trabalho_bd.enderecos
(
    uuid_endereco uuid NOT NULL,
    rua character varying(45) NOT NULL,
    numero smallint,
    bairro character varying(45) NOT NULL,
    cep character(8),
    complemento character varying(280),
    lat real,
    "long" real,
    id_municipio smallint NOT NULL,
    PRIMARY KEY (uuid_endereco)
);

CREATE TABLE IF NOT EXISTS trabalho_bd.municipios
(
    id_municipio smallint NOT NULL,
    nome character varying(60) NOT NULL,
    id_uf smallint NOT NULL,
    PRIMARY KEY (id_municipio)
);

CREATE TABLE IF NOT EXISTS trabalho_bd.ufs
(
    id_uf smallint NOT NULL,
    nome character varying(60) NOT NULL,
    sigla character(2) NOT NULL,
    PRIMARY KEY (id_uf),
    UNIQUE (nome),
    UNIQUE (sigla)
);

CREATE TABLE IF NOT EXISTS trabalho_bd.categorias
(
    id_categoria smallint NOT NULL,
    nome character varying(45) NOT NULL,
    prioridade smallint NOT NULL,
    PRIMARY KEY (id_categoria)
);

CREATE TABLE IF NOT EXISTS trabalho_bd.produtos
(
    uuid_produto uuid NOT NULL,
    nome character varying(100) NOT NULL,
    descricao character varying(280) NOT NULL,
    massa real,
    id_categoria smallint NOT NULL,
    PRIMARY KEY (uuid_produto)
);

CREATE TABLE IF NOT EXISTS trabalho_bd.veiculos
(
    uuid_veiculo uuid NOT NULL,
    placa character(7) NOT NULL,
    tipo character varying(45) NOT NULL,
    capacidade integer NOT NULL,
    PRIMARY KEY (uuid_veiculo)
);

CREATE TABLE IF NOT EXISTS trabalho_bd.descartes
(
    uuid_descarte uuid NOT NULL,
    solicitado_em timestamp without time zone NOT NULL,
    uuid_solicitante uuid NOT NULL,
    uuid_origem uuid NOT NULL,
    uuid_destino uuid NOT NULL,
    PRIMARY KEY (uuid_descarte)
);

CREATE TABLE IF NOT EXISTS trabalho_bd.pessoa_reside_endereco
(
    uuid_pessoa uuid NOT NULL,
    uuid_endereco uuid NOT NULL,
    PRIMARY KEY (uuid_pessoa, uuid_endereco)
);

CREATE TABLE IF NOT EXISTS trabalho_bd.funcionario_executa_descarte
(
    uuid_veiculo uuid NOT NULL,
    uuid_funcionario uuid NOT NULL,
    uuid_descarte uuid NOT NULL,
    executado_em timestamp without time zone NOT NULL,
    PRIMARY KEY (uuid_veiculo, uuid_funcionario, uuid_descarte)
);

CREATE TABLE IF NOT EXISTS trabalho_bd.descarte_contem_produtos
(
    uuid_descarte uuid NOT NULL,
    uuid_produto uuid NOT NULL,
    PRIMARY KEY (uuid_descarte, uuid_produto)
);

ALTER TABLE IF EXISTS trabalho_bd.enderecos
    ADD FOREIGN KEY (id_municipio)
    REFERENCES trabalho_bd.municipios (id_municipio) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS trabalho_bd.municipios
    ADD FOREIGN KEY (id_uf)
    REFERENCES trabalho_bd.ufs (id_uf) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS trabalho_bd.produtos
    ADD CONSTRAINT fk_categoria_produto FOREIGN KEY (id_categoria)
    REFERENCES trabalho_bd.categorias (id_categoria) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS trabalho_bd.descartes
    ADD FOREIGN KEY (uuid_solicitante)
    REFERENCES trabalho_bd.pessoas (uuid_pessoa) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS trabalho_bd.descartes
    ADD FOREIGN KEY (uuid_origem)
    REFERENCES trabalho_bd.enderecos (uuid_endereco) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS trabalho_bd.descartes
    ADD FOREIGN KEY (uuid_destino)
    REFERENCES trabalho_bd.enderecos (uuid_endereco) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS trabalho_bd.pessoa_reside_endereco
    ADD FOREIGN KEY (uuid_pessoa)
    REFERENCES trabalho_bd.pessoas (uuid_pessoa) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS trabalho_bd.pessoa_reside_endereco
    ADD FOREIGN KEY (uuid_endereco)
    REFERENCES trabalho_bd.enderecos (uuid_endereco) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS trabalho_bd.funcionario_executa_descarte
    ADD FOREIGN KEY (uuid_veiculo)
    REFERENCES trabalho_bd.veiculos (uuid_veiculo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS trabalho_bd.funcionario_executa_descarte
    ADD FOREIGN KEY (uuid_funcionario)
    REFERENCES trabalho_bd.pessoas (uuid_pessoa) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS trabalho_bd.funcionario_executa_descarte
    ADD FOREIGN KEY (uuid_descarte)
    REFERENCES trabalho_bd.descartes (uuid_descarte) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS trabalho_bd.descarte_contem_produtos
    ADD FOREIGN KEY (uuid_descarte)
    REFERENCES trabalho_bd.descartes (uuid_descarte) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS trabalho_bd.descarte_contem_produtos
    ADD FOREIGN KEY (uuid_produto)
    REFERENCES trabalho_bd.produtos (uuid_produto) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;